definitions:
  dto.User:
    properties:
      avatar_url:
        type: string
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      surname:
        type: string
      updated_at:
        type: string
    type: object
  response.JSONResponse:
    description: default JSON-response
    properties:
      data:
        type: object
      error:
        type: string
      success:
        type: boolean
    type: object
info:
  contact: {}
paths:
  /user/create:
    get:
      consumes:
      - application/json
      description: create user
      parameters:
      - description: User create data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.JSONResponse'
      summary: create user
      tags:
      - User
  /user/delete:
    get:
      consumes:
      - application/json
      description: delete user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.JSONResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.JSONResponse'
      summary: delete user
      tags:
      - User
  /user/update:
    get:
      consumes:
      - application/json
      description: update user
      parameters:
      - description: User create data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.JSONResponse'
      summary: update user
      tags:
      - User
swagger: "2.0"
